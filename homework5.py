# Цель:
# Написать программу на языке Python, используя Pycharm, для работы с неизменяемыми и изменяемыми объектами.
#
# 1. В проекте, где вы решаете домашние задания, создайте модуль 'homework5.py' и напишите весь код в нём.
#
# 2. Задайте переменные разных типов данных:
#   - Создайте переменную immutable_var и присвойте ей кортеж из нескольких элементов разных типов данных.
#   - Выполните операции вывода кортежа immutable_var на экран.
#
# 3. Изменение значений переменных:
#   - Попытайтесь изменить элементы кортежа immutable_var. Объясните, почему нельзя изменить значения элементов кортежа.
#
# 4. Создание изменяемых структур данных:
#   - Создайте переменную mutable_list и присвойте ей список из нескольких элементов.
#   - Измените элементы списка mutable_list.
#   - Выведите на экран измененный список mutable_list.
#
# Примечания:
# - Для вывода значений на экран используйте функцию print().
# - Обратите внимание на особенности изменяемых и неизменяемых объектов в Python.
#
# Пример результата выполнения программы:
# Immutable tuple: (1, 2, 'a', 'b')
# Mutable list: [1, 2, 'a', 'b', 'Modified']

immutable_var = 1, 2.6, True, 'string'
print(immutable_var)

immutable_var[1] = 24  # Кортежи в Python являются неизменяемыми последовательностями, что означает,
# что их элементы нельзя изменять после создания. Попытка изменения значений элементов кортежа приведет к ошибке.
# Когда мы запускаем этот код, мы получаем ошибку TypeError: 'tuple' object does not support item assignment.
# Это происходит потому, что после создания кортежа его элементы становятся постоянными,
# и любые попытки их изменения будут блокироваться. Для безопасности данных, гарантиреуется что данные не будут случойно
# или намеренно изменены после создания кортежа. Неизменяемые объекты, такие как кортежи, могут быть использованы в
# качестве ключей в словарях или элементов в множествах, так как их хэш-значение не изменяется.
# Неизменяемые объекты могут быть оптимизированы интерпретатором Python, что может улучшить производительность.


mutable_list = [2, 'string', True, 2.64]
mutable_list[3] = False
print(mutable_list)
